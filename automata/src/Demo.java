import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.NoSuchElementException;
import java.util.Scanner;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author Vaibhav
 */
public class Demo extends javax.swing.JFrame {

	File file;
	String input;
	boolean valid = false;
	// Graphics g;

	DFA dfa;
	NFA nfa;
	PDA pda;
	TuringMachine tm;
	Scanner sc;
	public static String dirpath = ".";

	/**
	 * Creates new form Demo
	 */
	public Demo() {
		initComponents();
		setIconImage(Toolkit.getDefaultToolkit().getImage(
				getClass().getResource("power.png")));
		BuildButton.setEnabled(false);
		TestButton.setEnabled(false);
		TestTextField.setEnabled(false);
		jLabel1.setVisible(false);
		
		SampleTextArea.setEditable(false);
		SampleTextArea.setMaximumSize(SampleTextArea.getPreferredSize());
		PathTextField.setMaximumSize(PathTextField.getPreferredSize());
		TestTextField.setMaximumSize(TestTextField.getPreferredSize());

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold default state="collapsed" desc="Generated Code">
	private void initComponents() {

		buttonGroup1 = new javax.swing.ButtonGroup();
		FileButton = new javax.swing.JButton();
		PathTextField = new javax.swing.JTextField();
		jRadioButton1 = new javax.swing.JRadioButton();
		jRadioButton2 = new javax.swing.JRadioButton();
		jRadioButton3 = new javax.swing.JRadioButton();
		jRadioButton4 = new javax.swing.JRadioButton();
		BuildButton = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		SampleTextArea = new javax.swing.JTextArea();
		jLabel1 = new javax.swing.JLabel();
		answerLabel = new javax.swing.JLabel();
		stackTapeLabel = new javax.swing.JLabel();
		tapeFinalLabel = new javax.swing.JLabel();
		TestTextField = new javax.swing.JTextField();
		TestButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("automata");
		setBackground(new java.awt.Color(204, 204, 204));
		setForeground(java.awt.Color.gray);
		this.getContentPane().setBackground(new Color(205, 133, 63));

		FileButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		FileButton.setText("Choose File");
		FileButton.setPreferredSize(new java.awt.Dimension(117, 31));
		FileButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				FileButtonActionPerformed(evt);
			}
		});

		buttonGroup1.add(jRadioButton1);
		jRadioButton1.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
		jRadioButton1.setSelected(true);
		jRadioButton1.setText("DFA");
		jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButton1ActionPerformed(evt);
			}
		});
		buttonGroup1.add(jRadioButton2);
		jRadioButton2.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
		jRadioButton2.setText("NFA");
		jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButton2ActionPerformed(evt);
			}
		});
		buttonGroup1.add(jRadioButton3);
		jRadioButton3.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
		jRadioButton3.setText("PDA");
		jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButton3ActionPerformed(evt);
			}
		});
		buttonGroup1.add(jRadioButton4);
		jRadioButton4.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
		jRadioButton4.setText("Turing Machine");
		jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButton4ActionPerformed(evt);
			}
		});

		BuildButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		BuildButton.setText("Build");
		BuildButton.setActionCommand("");
		BuildButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					BuildButtonActionPerformed(evt);
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block

				}
			}
		});

		SampleTextArea.setColumns(20);
		SampleTextArea.setRows(5);
		SampleTextArea.setFont(new java.awt.Font("Times New Roman", 0, 16));

		jScrollPane1.setViewportView(SampleTextArea);

		jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
		jLabel1.setText("Enter a string to test this machine!");

		answerLabel.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
		stackTapeLabel.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

		tapeFinalLabel.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

		TestTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

		TestButton.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
		TestButton.setText("Test");
		TestButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				TestButtonActionPerformed(evt);
			}
		});
	

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
																.addGroup(
																		layout.createSequentialGroup()
																				.addComponent(
																						jRadioButton1)
																				.addGap(69,
																						69,
																						69)
																				.addComponent(
																						jRadioButton2)
																				.addGap(40,
																						40,
																						40)
																				.addComponent(
																						jRadioButton3)
																				.addGap(39,
																						39,
																						39)
																				.addComponent(
																						jRadioButton4))
																.addGroup(
																		layout.createSequentialGroup()
																				.addGroup(
																						layout.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																								.addComponent(
																										FileButton,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addComponent(
																										BuildButton,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										117,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGap(23,
																						23,
																						23)
																				.addGroup(
																						layout.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																								.addComponent(
																										PathTextField,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										400,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addComponent(
																										jScrollPane1))))
												.addComponent(jLabel1)
												.addComponent(answerLabel)
												.addComponent(stackTapeLabel)
												.addComponent(tapeFinalLabel)

												.addGroup(
														layout.createSequentialGroup()

																.addComponent(
																		TestTextField,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		201,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)

																.addComponent(
																		TestButton)))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE))

		);
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jRadioButton1)
												.addComponent(jRadioButton2)
												.addComponent(jRadioButton3)
												.addComponent(jRadioButton4))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														PathTextField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														FileButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														29,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														BuildButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														29,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														242,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(12, 12, 12)
								.addComponent(jLabel1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										25,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														TestTextField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														30,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														TestButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														30,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(answerLabel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										25,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(stackTapeLabel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										25,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tapeFinalLabel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										25,
										javax.swing.GroupLayout.PREFERRED_SIZE)

								.addContainerGap(70, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void FileButtonActionPerformed(java.awt.event.ActionEvent evt) {
		JFileChooser choose = new JFileChooser(dirpath);
		int status = choose.showOpenDialog(null);
		if (status == JFileChooser.APPROVE_OPTION) {
			file = choose.getSelectedFile();
			String path = file.getPath();
			PathTextField.setText(path);
			BuildButton.setEnabled(true);
			dirpath = choose.getSelectedFile().getAbsolutePath().toString();
			TestButton.setEnabled(false);
			TestTextField.setEnabled(false);
			SampleTextArea.setText("");
			valid = false;

		}
	}

	private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		reset();

	}

	private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		reset();
	}

	private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		reset();
	}

	private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {
		reset();
	}

	private void BuildButtonActionPerformed(java.awt.event.ActionEvent evt)
			throws FileNotFoundException {
		// TODO add your handling code here:
		sc = new Scanner(file);
		SampleTextArea.setText("");
		if (jRadioButton1.isSelected()) {
			try {
				dfa = new DFA(SampleTextArea);
				dfa.createStates(sc);
				dfa.createStartState(sc);
				dfa.createAcceptState(sc);
				dfa.createTransitionFunction(sc);
				dfa.getSampleStrings();
				valid = true;
			} catch (InputFileException e) {
				JOptionPane.showMessageDialog(
						null,
						"Is the DFA file properly formatted?\n"
								+ e.getMessage(), "Invalid DFA file!",
						JOptionPane.ERROR_MESSAGE);
			}catch(NoSuchElementException e)
			{
				JOptionPane.showMessageDialog(
						null,
						"Is the DFA file properly formatted?\n"
								+ e.getMessage(), "Invalid DFA file!",
						JOptionPane.ERROR_MESSAGE);
			}

		} else if (jRadioButton2.isSelected()) {
			try {
				nfa = new NFA(SampleTextArea);
				nfa.createStates(sc);
				nfa.createStartState(sc);
				nfa.createAcceptState(sc);
				nfa.createTransitionFunction(sc);
				nfa.getSampleStrings();
				valid = true;
			} catch (InputFileException e) {
				JOptionPane.showMessageDialog(
						null,
						"Is the NFA file properly formatted?\n"
								+ e.getMessage(), "Invalid NFA file!",
						JOptionPane.ERROR_MESSAGE);
			}
			catch(NoSuchElementException e)
			{
				JOptionPane.showMessageDialog(
						null,
						"Is the DFA file properly formatted?\n"
								+ e.getMessage(), "Invalid DFA file!",
						JOptionPane.ERROR_MESSAGE);
			}

		} else if (jRadioButton3.isSelected()) {
			try {
				pda = new PDA(SampleTextArea);
				pda.createStates(sc);
				pda.createStartState(sc);
				pda.createAcceptState(sc);
				pda.createTransitionFunction(sc);
				valid = true;
			} catch (InputFileException e) {
				JOptionPane.showMessageDialog(
						null,
						"Is the PDA file properly formatted?\n"
								+ e.getMessage(), "Invalid PDA file!",
						JOptionPane.ERROR_MESSAGE);
			}
			catch(NoSuchElementException e)
			{
				JOptionPane.showMessageDialog(
						null,
						"Is the DFA file properly formatted?\n"
								+ e.getMessage(), "Invalid DFA file!",
						JOptionPane.ERROR_MESSAGE);
			}

		} else if (jRadioButton4.isSelected()) {
			try {
				tm = new TuringMachine(SampleTextArea);
				tm.createStates(sc);
				tm.createStartState(sc);
				tm.createAcceptState(sc);
				tm.createTransitionFunction(sc);
				valid = true;
			} catch (InputFileException e) {
				JOptionPane
						.showMessageDialog(
								null,
								"Is the TM file properly formatted?\n"
										+ e.getMessage(), "Invalid TM file",
								JOptionPane.ERROR_MESSAGE);
			}
			catch(NoSuchElementException e)
			{
				JOptionPane.showMessageDialog(
						null,
						"Is the DFA file properly formatted?\n"
								+ e.getMessage(), "Invalid DFA file!",
						JOptionPane.ERROR_MESSAGE);
			}

		}
		if (valid) {
			TestButton.setEnabled(true);
			TestTextField.setEnabled(true);
			jLabel1.setVisible(true);

		}
	}
	 
	private void TestButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if (TestTextField.getText().equals("")
				|| TestTextField.getText() == null) {
			JOptionPane.showMessageDialog(null, "Please Enter Something",
					"Oops!", JOptionPane.INFORMATION_MESSAGE);
		} else {

			try {
				if (jRadioButton1.isSelected()) {
					if (dfa.readString(TestTextField.getText()))
						setTextAcc();
					else
						setTextRej();

				} else if (jRadioButton2.isSelected()) {
					if (nfa.readString(TestTextField.getText()))
						setTextAcc();
					else
						setTextRej();
				} else if (jRadioButton3.isSelected()) {
					if (pda.readString(TestTextField.getText(), stackTapeLabel))
						setTextAcc();
					else
						setTextRej();
				} else if (jRadioButton4.isSelected()) {
					if (tm.readString(TestTextField.getText(), stackTapeLabel,
							tapeFinalLabel))
						setTextAcc();
					else
						setTextRej();
				}
			} catch (IllegalArgumentException e) {

				JOptionPane.showMessageDialog(null, e.getMessage(),
						"Invalid Input", JOptionPane.ERROR_MESSAGE);

			} catch (NullPointerException e) {
				JOptionPane.showMessageDialog(null,
						"Think there is something wrong with the input file\n"
								+ e.getMessage(), "Woops!!",
						JOptionPane.ERROR_MESSAGE);
			}

		}
	}

	private void setTextAcc() {
		answerLabel.setText("String Accepted!");
		answerLabel.setForeground(Color.green);
	}

	private void setTextRej() {
		answerLabel.setText("String Rejected!");
		answerLabel.setForeground(Color.red);
	}

	private void reset() {
		BuildButton.setEnabled(false);
		TestButton.setEnabled(false);
		TestTextField.setEnabled(false);
		jLabel1.setVisible(false);
		answerLabel.setText("");
		PathTextField.setText("");
		TestTextField.setText("");
		SampleTextArea.setText("");
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
	
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Demo.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Demo.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Demo.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Demo.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Demo().setVisible(true);
				
			}
			

		});
		

	}

	// Variables declaration - do not modify
	private javax.swing.JButton BuildButton;
	private javax.swing.JButton FileButton;
	private javax.swing.JTextField PathTextField;
	public javax.swing.JTextArea SampleTextArea;
	private javax.swing.JButton TestButton;
	private javax.swing.JTextField TestTextField;
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel answerLabel;
	private javax.swing.JLabel stackTapeLabel;
	private javax.swing.JLabel tapeFinalLabel;
	private javax.swing.JRadioButton jRadioButton1;
	private javax.swing.JRadioButton jRadioButton2;
	private javax.swing.JRadioButton jRadioButton3;
	private javax.swing.JRadioButton jRadioButton4;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration

}
